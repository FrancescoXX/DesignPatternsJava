Prototype Pattern

By Purpose: Creational
By Scope: Object

Examples:

Issues:

Solution:
    - uses clone() for creation of new objects

Intent:
    - specify the kind of objects to create using a prototypical instance, and create new objects by copying this prototype

When:
    - Classes to instantiate are specific runtime
    - avoid building class hierarchies
    - a class can have multiple instances of state

Structure:
    - All prototype supports clone method
    - Client is wired with a prototype at startup
    - Create new object via clone method

Benefits:
    - Add/remove objects at runtime
    - Reduce subclassing
    - Configure application dynamically
    - Different values for new objects

Drawbacks:
    - Require to create prototypes before other object creation (might become expensive)

Conclusion:
Prototype pattern is great for:
    - Configure object creation by cloning
    - Dynamically change object creation
